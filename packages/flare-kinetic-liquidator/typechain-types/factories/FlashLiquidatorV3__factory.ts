/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  FlashLiquidatorV3,
  FlashLiquidatorV3Interface,
} from "../FlashLiquidatorV3";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factoryV3",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FlashFail",
    type: "error",
  },
  {
    inputs: [],
    name: "NoPool",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapFail",
    type: "error",
  },
  {
    inputs: [],
    name: "beneficiary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factoryV3",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "borrower",
            type: "address",
          },
          {
            internalType: "address",
            name: "kTokenDebt",
            type: "address",
          },
          {
            internalType: "address",
            name: "debtToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "kTokenColl",
            type: "address",
          },
          {
            internalType: "address",
            name: "collUnderlying",
            type: "address",
          },
          {
            internalType: "address",
            name: "flashToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "repayAmount",
            type: "uint256",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "uint256",
            name: "minProfit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutDebtSwap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutCollSwap",
            type: "uint256",
          },
        ],
        internalType: "struct FlashLiquidatorV3.Params",
        name: "p",
        type: "tuple",
      },
    ],
    name: "liquidateWithFlash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3FlashCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b5060405161123e38038061123e83398101604081905261002f91610079565b6001600160a01b0392831660805290821660a052600080546001600160a01b031916919092161790556100bc565b80516001600160a01b038116811461007457600080fd5b919050565b60008060006060848603121561008e57600080fd5b6100978461005d565b92506100a56020850161005d565b91506100b36040850161005d565b90509250925092565b60805160a0516111436100fb6000396000818160df01528181610343015281816104630152818161079e01526108be01526000606101526111436000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631d5f45f51461005c57806338af3eed1461009f578063a6184706146100b2578063e9cbafb0146100c7578063f887ea40146100da575b600080fd5b6100837f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b600054610083906001600160a01b031681565b6100c56100c0366004610bde565b610101565b005b6100c56100d5366004610c21565b6102f6565b6100837f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b0382166101455760405162461bcd60e51b81526020600482015260066024820152650706f6f6c3d360d41b60448201526064015b60405180910390fd5b816001600160a01b031663490e6cbc30846001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610193573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b79190610ca1565b6001600160a01b03166101d060c0860160a08701610cc5565b6001600160a01b0316146101e55760006101eb565b8360c001355b856001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610229573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024d9190610ca1565b6001600160a01b031661026660c0870160a08801610cc5565b6001600160a01b03161461027b576000610281565b8460c001355b856040516020016102929190610cf5565b6040516020818303038152906040526040518563ffffffff1660e01b81526004016102c09493929190610dde565b600060405180830381600087803b1580156102da57600080fd5b505af11580156102ee573d6000803e3d6000fd5b505050505050565b600061030482840184610ebc565b905080604001516001600160a01b03168160a001516001600160a01b0316146104ea5760a081015160405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af115801561039d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c19190610f7c565b506040805160028082526060820183526000926020830190803683370190505090508160a00151816000815181106103fb576103fb610f9e565b60200260200101906001600160a01b031690816001600160a01b03168152505081604001518160018151811061043357610433610f9e565b6001600160a01b03928316602091820292909201015260c08301516101208401516040516338ed173960e01b81527f0000000000000000000000000000000000000000000000000000000000000000909316926338ed1739926104a0929091869030904290600401610fb4565b6000604051808303816000875af11580156104bf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104e79190810190611027565b50505b6040808201516020830151915163095ea7b360e01b81526001600160a01b039283166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015610544573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105689190610f7c565b506020810151815160c08301516060840151604051637af1e23160e11b81526001600160a01b039384166004820152602481019290925282166044820152600092919091169063f5e3c462906064016020604051808303816000875af11580156105d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fa91906110cd565b905080156106435760405162461bcd60e51b81526020600482015260166024820152751b1a5c5d5a59185d19509bdc9c9bddc819985a5b195960521b604482015260640161013c565b60608201516040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561068e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b291906110cd565b606084015160405163db006a7560e01b8152600481018390529192506001600160a01b03169063db006a75906024016020604051808303816000875af1158015610700573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072491906110cd565b156107615760405162461bcd60e51b815260206004820152600d60248201526c1c995919595b4819985a5b1959609a1b604482015260640161013c565b8260a001516001600160a01b031683608001516001600160a01b0316146109a557608083015160405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af11580156107f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081c9190610f7c565b5060408051600280825260608201835260009260208301908036833701905050905083608001518160008151811061085657610856610f9e565b60200260200101906001600160a01b031690816001600160a01b0316815250508360a001518160018151811061088e5761088e610f9e565b6001600160a01b03928316602091820292909201015260808501516040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000008316926338ed17399216906370a0823190602401602060405180830381865afa15801561090e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093291906110cd565b8661014001518430426040518663ffffffff1660e01b815260040161095b959493929190610fb4565b6000604051808303816000875af115801561097a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109a29190810190611027565b50505b60006109b187896110e6565b90506000818560c001516109c591906110e6565b60a086015160405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610a19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3d9190610f7c565b610a7c5760405162461bcd60e51b815260206004820152601060248201526f199b185cda081c995c185e4819985a5b60821b604482015260640161013c565b60a08501516040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610ac7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aeb91906110cd565b9050856101000151811015610b2e5760405162461bcd60e51b81526020600482015260096024820152681b5a5b941c9bd99a5d60ba1b604482015260640161013c565b60a086015160005460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303816000875af1158015610b85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba99190610f7c565b5050505050505050505050565b6001600160a01b0381168114610bcb57600080fd5b50565b8035610bd981610bb6565b919050565b600080828403610180811215610bf357600080fd5b8335610bfe81610bb6565b9250610160601f1982011215610c1357600080fd5b506020830190509250929050565b60008060008060608587031215610c3757600080fd5b8435935060208501359250604085013567ffffffffffffffff80821115610c5d57600080fd5b818701915087601f830112610c7157600080fd5b813581811115610c8057600080fd5b886020828501011115610c9257600080fd5b95989497505060200194505050565b600060208284031215610cb357600080fd5b8151610cbe81610bb6565b9392505050565b600060208284031215610cd757600080fd5b8135610cbe81610bb6565b803562ffffff81168114610bd957600080fd5b6101608101610d1482610d0785610bce565b6001600160a01b03169052565b610d2060208401610bce565b6001600160a01b03166020830152610d3a60408401610bce565b6001600160a01b03166040830152610d5460608401610bce565b6001600160a01b03166060830152610d6e60808401610bce565b6001600160a01b03166080830152610d8860a08401610bce565b6001600160a01b031660a083015260c08381013590830152610dac60e08401610ce2565b62ffffff1660e08301526101008381013590830152610120808401359083015261014092830135929091019190915290565b60018060a01b03851681526000602085602084015284604084015260806060840152835180608085015260005b81811015610e275785810183015185820160a001528201610e0b565b50600060a0828601015260a0601f19601f8301168501019250505095945050505050565b634e487b7160e01b600052604160045260246000fd5b604051610160810167ffffffffffffffff81118282101715610e8557610e85610e4b565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610eb457610eb4610e4b565b604052919050565b60006101608284031215610ecf57600080fd5b610ed7610e61565b610ee083610bce565b8152610eee60208401610bce565b6020820152610eff60408401610bce565b6040820152610f1060608401610bce565b6060820152610f2160808401610bce565b6080820152610f3260a08401610bce565b60a082015260c083013560c0820152610f4d60e08401610ce2565b60e082015261010083810135908201526101208084013590820152610140928301359281019290925250919050565b600060208284031215610f8e57600080fd5b81518015158114610cbe57600080fd5b634e487b7160e01b600052603260045260246000fd5b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b818110156110065784516001600160a01b031683529383019391830191600101610fe1565b50506001600160a01b03969096166060850152505050608001529392505050565b6000602080838503121561103a57600080fd5b825167ffffffffffffffff8082111561105257600080fd5b818501915085601f83011261106657600080fd5b81518181111561107857611078610e4b565b8060051b9150611089848301610e8b565b81815291830184019184810190888411156110a357600080fd5b938501935b838510156110c1578451825293850193908501906110a8565b98975050505050505050565b6000602082840312156110df57600080fd5b5051919050565b8082018082111561110757634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212204be4ee5e8a55f574d9d85c40f64cd56d2b9715c1a3b0e3535c629672f1ef9bc064736f6c63430008180033";

type FlashLiquidatorV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlashLiquidatorV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FlashLiquidatorV3__factory extends ContractFactory {
  constructor(...args: FlashLiquidatorV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _factoryV3: AddressLike,
    _router: AddressLike,
    _beneficiary: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _factoryV3,
      _router,
      _beneficiary,
      overrides || {}
    );
  }
  override deploy(
    _factoryV3: AddressLike,
    _router: AddressLike,
    _beneficiary: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _factoryV3,
      _router,
      _beneficiary,
      overrides || {}
    ) as Promise<
      FlashLiquidatorV3 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FlashLiquidatorV3__factory {
    return super.connect(runner) as FlashLiquidatorV3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlashLiquidatorV3Interface {
    return new Interface(_abi) as FlashLiquidatorV3Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FlashLiquidatorV3 {
    return new Contract(address, _abi, runner) as unknown as FlashLiquidatorV3;
  }
}
